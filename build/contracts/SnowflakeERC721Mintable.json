{
  "contractName": "SnowflakeERC721Mintable",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "uint256"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "uint256"
        },
        {
          "name": "to",
          "type": "uint256"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "uint256"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "uint256"
        },
        {
          "name": "to",
          "type": "uint256"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceSnowflakeMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "uint256"
        },
        {
          "name": "operator",
          "type": "uint256"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "uint256"
        }
      ],
      "name": "isSnowflakeMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "uint256"
        }
      ],
      "name": "addSnowflakeMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "uint256"
        },
        {
          "name": "to",
          "type": "uint256"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "snowflakeAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "uint256"
        }
      ],
      "name": "SnowflakeMinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "uint256"
        }
      ],
      "name": "SnowflakeMinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "einFrom",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "einTo",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "einOwner",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "einApproved",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "einOwner",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "einOperator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "uint256"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.6+commit.b259423e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"uint256\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"uint256\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"uint256\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"uint256\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"uint256\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceSnowflakeMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"uint256\"},{\"name\":\"operator\",\"type\":\"uint256\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"uint256\"}],\"name\":\"isSnowflakeMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"uint256\"}],\"name\":\"addSnowflakeMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"uint256\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"snowflakeAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"uint256\"}],\"name\":\"SnowflakeMinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"uint256\"}],\"name\":\"SnowflakeMinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"einFrom\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"einTo\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"einOwner\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"einApproved\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"einOwner\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"einOperator\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Snowflake ERC721 minting logic\",\"methods\":{\"approve(uint256,uint256)\":{\"details\":\"Approves another EIN to transfer the given token ID The zero EIN indicates there is no approved EIN. There can only be one approved EIN per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"uint256 to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(uint256)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"uint256 to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved EIN for a token ID, or zero if no EIN set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"EIN currently approved for the given token ID\"},\"isApprovedForAll(uint256,uint256)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator EIN which you want to query the approval of\",\"owner\":\"owner EIN which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mint(uint256,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The EIN that will receive the minted tokens.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"uint256 currently marked as the owner of the given token ID\"},\"safeTransferFrom(uint256,uint256,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another EIN If the target EIN is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"uint256 current owner of the token\",\"to\":\"uint256 to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(uint256,uint256,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another EIN If the target EIN is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"uint256 to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(uint256,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator EIN to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"transferFrom(uint256,uint256,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}},\"title\":\"SnowflakeERC721Mintable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/ein/token/ERC721/SnowflakeERC721Mintable.sol\":\"SnowflakeERC721Mintable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/ein/access/EINRoles.sol\":{\"keccak256\":\"0x9dd4763598b03044f79572c9eb554b2256ef20c0da1e60dadc77cc4c8ec3fcbf\",\"urls\":[\"bzzr://ee43a144547fca35d7941e1d470118d8fb13b165a49eaa1a62512f64725f9c0e\"]},\"/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/ein/access/roles/SnowflakeMinterRole.sol\":{\"keccak256\":\"0xcc387a300ce07e337cfce40783b33df0b4ebcb24b446434b5f4c34a02755c547\",\"urls\":[\"bzzr://20b6b626fd668bb2023770d5183825f82f567aa66cd8398edd7880f817dab57e\"]},\"/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/ein/token/ERC721/SnowflakeERC721.sol\":{\"keccak256\":\"0x8a370499f7285103514127d61b05b9f1c5e1f52d1974f3b039e45cd28c3ea878\",\"urls\":[\"bzzr://d22fe33589ee906af949bc1cc429a395f14796f3142d50e59d3d6de16f8a509e\"]},\"/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/ein/token/ERC721/SnowflakeERC721Interface.sol\":{\"keccak256\":\"0xa5e0f633e49cedd94989337a9cb2464dc948ceba335988397e526224b602c116\",\"urls\":[\"bzzr://f11c8ed796d4d4b73a5b88daf1fe83ea24eaa50139179359ada7b243ca29f521\"]},\"/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/ein/token/ERC721/SnowflakeERC721Mintable.sol\":{\"keccak256\":\"0xd06a96615fcef4c59adf36aecd35cf846e30cc573e3ff8c2d0abe3c6b55d2b4d\",\"urls\":[\"bzzr://ab142d4ebb5500950b57846c87dbff526c766f6f7e347ac7ca5279183d55a283\"]},\"/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/ein/token/ERC721/SnowflakeERC721ReceiverInterface.sol\":{\"keccak256\":\"0x1d94fd6a75bca20c27bfafc97de2e9df0f12eeae152820bbcaa423535223c019\",\"urls\":[\"bzzr://d053e44920ee5c53ded1ae8a112f34f28732bbc3ac04beb10b2e63369137c7dc\"]},\"/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/interfaces/IdentityRegistryInterface.sol\":{\"keccak256\":\"0xb559191dbd30da97a8b5759a895d7f4eff420eedc55b0786ae7206fbe384dc15\",\"urls\":[\"bzzr://a6122de11af1f831b1a93dba66aabe9e299f0040cf3404510790453addc6e0d9\"]},\"/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/interfaces/SnowflakeInterface.sol\":{\"keccak256\":\"0xb34e22de661c32131d4d5bbd8f8dbf1794e5d944736ccb31870b6f75bdd322e5\",\"urls\":[\"bzzr://aaa6399afaf287d517ece7ac874cf6da3c2d81f9d88cb8cdc4631adc3f4ac52a\"]},\"/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/snowflake_custom/SnowflakeReader.sol\":{\"keccak256\":\"0x2abd0f0b6837dec5554cf29f986d5e365631fc514d2f636fab1054958fd1a1c0\",\"urls\":[\"bzzr://149da665bf1ca0442cf1956087a24d1a11de1a2f5cd77eebefdcf2e1f2c56bb4\"]},\"/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/zeppelin/drafts/Counters.sol\":{\"keccak256\":\"0x982e18d2e3df98e3339f70f955a4d1fb78411a29963d0ea34621759eef67e86d\",\"urls\":[\"bzzr://a5438906da44343a09c6b47666d3649f269d9d156f2109e147e21595b2284363\"]},\"/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/zeppelin/introspection/ERC165.sol\":{\"keccak256\":\"0xd86c61f2e7e78c88716b5591bbf2d6cce8fe1a68320484994810d54f82605a7a\",\"urls\":[\"bzzr://4823f8b1263e0bacc50b5a823ebb27abeda34bffd67fa72225c44ebb2b4a30c7\"]},\"/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/zeppelin/introspection/IERC165.sol\":{\"keccak256\":\"0xc48ee580d20820cc0ef122b2acc9bf8836731dd8b9671cc03d21a12e3ab14976\",\"urls\":[\"bzzr://744cf3b8280d4a050ad0771e2ed0d7d41bbddfa40a541933d46bb31007a2e4a9\"]},\"/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/zeppelin/math/SafeMath.sol\":{\"keccak256\":\"0x2cee2f0a5f7c68ece40aa1641b34177859058b4b3d74f243112c96f0bff7d54b\",\"urls\":[\"bzzr://f84a966fb57ec20ab2ed137b385c332cb5f67a5ad2ee5c46eb64b3ca6a6ab1cd\"]}},\"version\":1}",
  "bytecode": "0x60806040526100367f01ffc9a70000000000000000000000000000000000000000000000000000000064010000000061003b810204565b6100a7565b7fffffffff00000000000000000000000000000000000000000000000000000000808216141561006a57600080fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b610cd3806100b66000396000f3fe608060405234801561001057600080fd5b50600436106100f95760003560e060020a9004806368d1e6411161009b5780639cc7f7081161006a5780639cc7f70814610331578063a4453ffb1461034e578063f46704621461036b578063f9f451b814610394576100f9565b806368d1e64114610230578063895c3e94146102e95780638d9188d5146102f15780639690f6d114610314576100f9565b80631b2ef1ca116100d75780631b2ef1ca146101a4578063310ed7f0146101c75780635d35a3d9146101f05780636352211e14610213576100f9565b806301ffc9a7146100fe578063081812fc1461014e57806316b49a431461017d575b600080fd5b61013a6004803603602081101561011457600080fd5b50357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166103b8565b604080519115158252519081900360200190f35b61016b6004803603602081101561016457600080fd5b50356103ec565b60408051918252519081900360200190f35b6101a26004803603604081101561019357600080fd5b50803590602001351515610413565b005b61013a600480360360408110156101ba57600080fd5b508035906020013561048f565b6101a2600480360360608110156101dd57600080fd5b50803590602081013590604001356104be565b6101a26004803603604081101561020657600080fd5b50803590602001356104e9565b61016b6004803603602081101561022957600080fd5b503561056e565b6101a26004803603608081101561024657600080fd5b8135916020810135916040820135919081019060808101606082013564010000000081111561027457600080fd5b82018360208201111561028657600080fd5b803590602001918460018302840111640100000000831117156102a857600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061058d945050505050565b6101a26105b3565b61013a6004803603604081101561030757600080fd5b50803590602001356105c6565b61013a6004803603602081101561032a57600080fd5b50356105e6565b61016b6004803603602081101561034757600080fd5b50356105f9565b6101a26004803603602081101561036457600080fd5b503561061c565b6101a26004803603606081101561038157600080fd5b508035906020810135906040013561063d565b61039c610658565b60408051600160a060020a039092168252519081900360200190f35b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660009081526020819052604090205460ff1690565b60006103f782610667565b61040057600080fd5b5060009081526003602052604090205490565b600061041e3361067b565b90508083141561042d57600080fd5b6000818152600560209081526040808320868452825291829020805460ff191685151590811790915582519081529151859284927fe08356808518f185b1eebe6f778106965c2df3a69af4d7139fa9451067146eb792918290030190a3505050565b60006104a261049d3361067b565b6105e6565b6104ab57600080fd5b6104b58383610881565b50600192915050565b6104d06104ca3361067b565b826108f9565b6104d957600080fd5b6104e4838383610934565b505050565b60006104f48261056e565b905060006105013361067b565b90508184141561051057600080fd5b81811480610523575061052382826105c6565b61052c57600080fd5b600083815260036020526040808220869055518491869185917f08aaf4f7dd1adfa5bfe7067dea5b4ebd7e119d43257438a9189f37d7044eb09a91a450505050565b6000818152600260205260408120548061058757600080fd5b92915050565b6105988484846104be565b6105a4848484846109ca565b6105ad57600080fd5b50505050565b6105c46105bf3361067b565b610b10565b565b600091825260056020908152604080842092845291905290205460ff1690565b600061058760068363ffffffff610b4f16565b60008161060557600080fd5b600082815260046020526040902061058790610b72565b61062861049d3361067b565b61063157600080fd5b61063a81610b76565b50565b6104e48383836040518060200160405280600081525061058d565b600154600160a060020a031681565b600090815260026020526040902054151590565b600154604080517fa759ee6f0000000000000000000000000000000000000000000000000000000081529051600092600160a060020a0316918391839163a759ee6f91600480830192602092919082900301818787803b1580156106de57600080fd5b505af11580156106f2573d6000803e3d6000fd5b505050506040513d602081101561070857600080fd5b5051604080517f237f1a21000000000000000000000000000000000000000000000000000000008152600160a060020a038781166004830152915192935083929183169163237f1a2191602480820192602092909190829003018186803b15801561077257600080fd5b505afa158015610786573d6000803e3d6000fd5b505050506040513d602081101561079c57600080fd5b50516107f3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610c806028913960400191505060405180910390fd5b80600160a060020a03166305c62c2f866040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a0316815260200191505060206040518083038186803b15801561084c57600080fd5b505afa158015610860573d6000803e3d6000fd5b505050506040513d602081101561087657600080fd5b505195945050505050565b8161088b57600080fd5b61089481610667565b1561089e57600080fd5b6000818152600260209081526040808320859055848352600490915290206108c590610bb5565b808260007faf6151f5085accf2d57e1e7bf7601d3b3982e0de7e9a90f032f8554de9c104f660405160405180910390a45050565b6000806109058361056e565b90508084148061091c57508361091a846103ec565b145b8061092c575061092c81856105c6565b949350505050565b8261093e8261056e565b1461094857600080fd5b8161095257600080fd5b61095b81610bbe565b600083815260046020526040902061097290610be3565b600082815260046020526040902061098990610bb5565b600081815260026020526040808220849055518291849186917faf6151f5085accf2d57e1e7bf7601d3b3982e0de7e9a90f032f8554de9c104f691a4505050565b60008084600160a060020a031663494114c26109e53361067b565b8887876040518563ffffffff1660e060020a0281526004018085815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610a49578181015183820152602001610a31565b50505050905090810190601f168015610a765780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015610a9857600080fd5b505af1158015610aac573d6000803e3d6000fd5b505050506040513d6020811015610ac257600080fd5b50517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f494114c20000000000000000000000000000000000000000000000000000000014915050949350505050565b610b2160068263ffffffff610bfa16565b60405181907f34803f71b3ce19f83d2efe8fd85a68795e6ca17a2139def6f374f7cec617366c90600090a250565b600081610b5b57600080fd5b506000908152602091909152604090205460ff1690565b5490565b610b8760068263ffffffff610c3016565b60405181907fc96fabf52983c486b9ee7f26fa97994b2199bd98cf74f02ef6aa1e1d87cbb48290600090a250565b80546001019055565b6000818152600360205260409020541561063a57600090815260036020526040812055565b8054610bf690600163ffffffff610c6a16565b9055565b80610c0457600080fd5b610c0e8282610b4f565b610c1757600080fd5b600090815260209190915260409020805460ff19169055565b80610c3a57600080fd5b610c448282610b4f565b15610c4e57600080fd5b600090815260209190915260409020805460ff19166001179055565b600082821115610c7957600080fd5b5090039056fe41646472657373206e6f6e2d6578697374656e7420696e204964656e746974795265676973747279a165627a7a723058209a2d48320636fcad825fd4af77f9768abac844c502862362684dc602bbba12d50029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f95760003560e060020a9004806368d1e6411161009b5780639cc7f7081161006a5780639cc7f70814610331578063a4453ffb1461034e578063f46704621461036b578063f9f451b814610394576100f9565b806368d1e64114610230578063895c3e94146102e95780638d9188d5146102f15780639690f6d114610314576100f9565b80631b2ef1ca116100d75780631b2ef1ca146101a4578063310ed7f0146101c75780635d35a3d9146101f05780636352211e14610213576100f9565b806301ffc9a7146100fe578063081812fc1461014e57806316b49a431461017d575b600080fd5b61013a6004803603602081101561011457600080fd5b50357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166103b8565b604080519115158252519081900360200190f35b61016b6004803603602081101561016457600080fd5b50356103ec565b60408051918252519081900360200190f35b6101a26004803603604081101561019357600080fd5b50803590602001351515610413565b005b61013a600480360360408110156101ba57600080fd5b508035906020013561048f565b6101a2600480360360608110156101dd57600080fd5b50803590602081013590604001356104be565b6101a26004803603604081101561020657600080fd5b50803590602001356104e9565b61016b6004803603602081101561022957600080fd5b503561056e565b6101a26004803603608081101561024657600080fd5b8135916020810135916040820135919081019060808101606082013564010000000081111561027457600080fd5b82018360208201111561028657600080fd5b803590602001918460018302840111640100000000831117156102a857600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061058d945050505050565b6101a26105b3565b61013a6004803603604081101561030757600080fd5b50803590602001356105c6565b61013a6004803603602081101561032a57600080fd5b50356105e6565b61016b6004803603602081101561034757600080fd5b50356105f9565b6101a26004803603602081101561036457600080fd5b503561061c565b6101a26004803603606081101561038157600080fd5b508035906020810135906040013561063d565b61039c610658565b60408051600160a060020a039092168252519081900360200190f35b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660009081526020819052604090205460ff1690565b60006103f782610667565b61040057600080fd5b5060009081526003602052604090205490565b600061041e3361067b565b90508083141561042d57600080fd5b6000818152600560209081526040808320868452825291829020805460ff191685151590811790915582519081529151859284927fe08356808518f185b1eebe6f778106965c2df3a69af4d7139fa9451067146eb792918290030190a3505050565b60006104a261049d3361067b565b6105e6565b6104ab57600080fd5b6104b58383610881565b50600192915050565b6104d06104ca3361067b565b826108f9565b6104d957600080fd5b6104e4838383610934565b505050565b60006104f48261056e565b905060006105013361067b565b90508184141561051057600080fd5b81811480610523575061052382826105c6565b61052c57600080fd5b600083815260036020526040808220869055518491869185917f08aaf4f7dd1adfa5bfe7067dea5b4ebd7e119d43257438a9189f37d7044eb09a91a450505050565b6000818152600260205260408120548061058757600080fd5b92915050565b6105988484846104be565b6105a4848484846109ca565b6105ad57600080fd5b50505050565b6105c46105bf3361067b565b610b10565b565b600091825260056020908152604080842092845291905290205460ff1690565b600061058760068363ffffffff610b4f16565b60008161060557600080fd5b600082815260046020526040902061058790610b72565b61062861049d3361067b565b61063157600080fd5b61063a81610b76565b50565b6104e48383836040518060200160405280600081525061058d565b600154600160a060020a031681565b600090815260026020526040902054151590565b600154604080517fa759ee6f0000000000000000000000000000000000000000000000000000000081529051600092600160a060020a0316918391839163a759ee6f91600480830192602092919082900301818787803b1580156106de57600080fd5b505af11580156106f2573d6000803e3d6000fd5b505050506040513d602081101561070857600080fd5b5051604080517f237f1a21000000000000000000000000000000000000000000000000000000008152600160a060020a038781166004830152915192935083929183169163237f1a2191602480820192602092909190829003018186803b15801561077257600080fd5b505afa158015610786573d6000803e3d6000fd5b505050506040513d602081101561079c57600080fd5b50516107f3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180610c806028913960400191505060405180910390fd5b80600160a060020a03166305c62c2f866040518263ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a0316815260200191505060206040518083038186803b15801561084c57600080fd5b505afa158015610860573d6000803e3d6000fd5b505050506040513d602081101561087657600080fd5b505195945050505050565b8161088b57600080fd5b61089481610667565b1561089e57600080fd5b6000818152600260209081526040808320859055848352600490915290206108c590610bb5565b808260007faf6151f5085accf2d57e1e7bf7601d3b3982e0de7e9a90f032f8554de9c104f660405160405180910390a45050565b6000806109058361056e565b90508084148061091c57508361091a846103ec565b145b8061092c575061092c81856105c6565b949350505050565b8261093e8261056e565b1461094857600080fd5b8161095257600080fd5b61095b81610bbe565b600083815260046020526040902061097290610be3565b600082815260046020526040902061098990610bb5565b600081815260026020526040808220849055518291849186917faf6151f5085accf2d57e1e7bf7601d3b3982e0de7e9a90f032f8554de9c104f691a4505050565b60008084600160a060020a031663494114c26109e53361067b565b8887876040518563ffffffff1660e060020a0281526004018085815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610a49578181015183820152602001610a31565b50505050905090810190601f168015610a765780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015610a9857600080fd5b505af1158015610aac573d6000803e3d6000fd5b505050506040513d6020811015610ac257600080fd5b50517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f494114c20000000000000000000000000000000000000000000000000000000014915050949350505050565b610b2160068263ffffffff610bfa16565b60405181907f34803f71b3ce19f83d2efe8fd85a68795e6ca17a2139def6f374f7cec617366c90600090a250565b600081610b5b57600080fd5b506000908152602091909152604090205460ff1690565b5490565b610b8760068263ffffffff610c3016565b60405181907fc96fabf52983c486b9ee7f26fa97994b2199bd98cf74f02ef6aa1e1d87cbb48290600090a250565b80546001019055565b6000818152600360205260409020541561063a57600090815260036020526040812055565b8054610bf690600163ffffffff610c6a16565b9055565b80610c0457600080fd5b610c0e8282610b4f565b610c1757600080fd5b600090815260209190915260409020805460ff19169055565b80610c3a57600080fd5b610c448282610b4f565b15610c4e57600080fd5b600090815260209190915260409020805460ff19166001179055565b600082821115610c7957600080fd5b5090039056fe41646472657373206e6f6e2d6578697374656e7420696e204964656e746974795265676973747279a165627a7a723058209a2d48320636fcad825fd4af77f9768abac844c502862362684dc602bbba12d50029",
  "sourceMap": "192:784:15:-;;;639:40:62;658:20;639:18;;;;:40;:::i;:::-;192:784:15;;989:158:62;1064:25;;;;;;1056:34;;;;;;1100:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1100:40:62;1136:4;1100:40;;;989:158::o;192:784:15:-;;;;;;;",
  "deployedSourceMap": "192:784:15:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;192:784:15;;;;;;;;-1:-1:-1;;;192:784:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:133:62;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;777:133:62;-1:-1:-1;;777:133:62;;:::i;:::-;;;;;;;;;;;;;;;;;;4410:151:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4410:151:12;;:::i;:::-;;;;;;;;;;;;;;;;4849:246;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4849:246:12;;;;;;;;;:::i;:::-;;833:141:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;833:141:15;;;;;;;:::i;5987:188:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5987:188:12;;;;;;;;;;;;:::i;3808:329::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3808:329:12;;;;;;;:::i;3235:168::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3235:168:12;;:::i;7637:211::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7637:211:12;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7637:211:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7637:211:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7637:211:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7637:211:12;;-1:-1:-1;7637:211:12;;-1:-1:-1;;;;;7637:211:12:i;1277:101:11:-;;;:::i;5408:145:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5408:145:12;;;;;;;:::i;1029:119:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1029:119:11;;:::i;2866:151:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2866:151:12;;:::i;1154:117:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1154:117:11;;:::i;6808:132:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6808:132:12;;;;;;;;;;;;:::i;371:31:53:-;;;:::i;:::-;;;;-1:-1:-1;;;;;371:31:53;;;;;;;;;;;;;;777:133:62;-1:-1:-1;;870:33:62;847:4;870:33;;;;;;;;;;;;;;777:133::o;4410:151:12:-;4469:7;4496:16;4504:7;4496;:16::i;:::-;4488:25;;;;;;-1:-1:-1;4530:24:12;;;;:15;:24;;;;;;;4410:151::o;4849:246::-;4920:14;4937:18;4944:10;4937:6;:18::i;:::-;4920:35;;4979:6;4973:2;:12;;4965:21;;;;;;4996:26;;;;:18;:26;;;;;;;;:30;;;;;;;;;:41;;-1:-1:-1;;4996:41:12;;;;;;;;;;5052:36;;;;;;;4996:30;;:26;;5052:36;;;;;;;;;4849:246;;;:::o;833:141:15:-;912:4;967:37:11;985:18;992:10;985:6;:18::i;:::-;967:17;:37::i;:::-;959:46;;;;;;928:18:15;934:2;938:7;928:5;:18::i;:::-;-1:-1:-1;963:4:15;833:141;;;;:::o;5987:188:12:-;6077:47;6096:18;6103:10;6096:6;:18::i;:::-;6116:7;6077:18;:47::i;:::-;6069:56;;;;;;6136:32;6150:4;6156:2;6160:7;6136:13;:32::i;:::-;5987:188;;;:::o;3808:329::-;3871:13;3887:16;3895:7;3887;:16::i;:::-;3871:32;;3913:14;3930:18;3937:10;3930:6;:18::i;:::-;3913:35;;3972:5;3966:2;:11;;3958:20;;;;;;4006:5;3996:6;:15;:50;;;;4015:31;4032:5;4039:6;4015:16;:31::i;:::-;3988:59;;;;;;4058:24;;;;:15;:24;;;;;;:29;;;4102:28;4074:7;;4085:2;;4111:5;;4102:28;;;3808:329;;;;:::o;3235:168::-;3290:7;3325:20;;;:11;:20;;;;;;3363:10;3355:19;;;;;;3391:5;3235:168;-1:-1:-1;;3235:168:12:o;7637:211::-;7743:31;7756:4;7762:2;7766:7;7743:12;:31::i;:::-;7792:48;7815:4;7821:2;7825:7;7834:5;7792:22;:48::i;:::-;7784:57;;;;;;7637:211;;;;:::o;1277:101:11:-;1329:42;1352:18;1359:10;1352:6;:18::i;:::-;1329:22;:42::i;:::-;1277:101::o;5408:145:12:-;5488:4;5511:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;5408:145::o;1029:119:11:-;1094:4;1117:24;:11;1133:7;1117:24;:15;:24;:::i;2866:151:12:-;2921:7;2948:10;2940:19;;;;;;2976:24;;;;:17;:24;;;;;:34;;:32;:34::i;1154:117:11:-;967:37;985:18;992:10;985:6;:18::i;967:37::-;959:46;;;;;;1236:28;1256:7;1236:19;:28::i;:::-;1154:117;:::o;6808:132:12:-;6894:39;6911:4;6917:2;6921:7;6894:39;;;;;;;;;;;;:16;:39::i;371:31:53:-;;;-1:-1:-1;;;;;371:31:53;;:::o;8042:143:12:-;8099:4;8131:20;;;:11;:20;;;;;;8168:10;;;8042:143::o;736:580:53:-;940:16;;982:28;;;;;;;;790:11;;-1:-1:-1;;;;;940:16:53;;790:11;;940:16;;982:26;;:28;;;;;;;;;;;;;;790:11;940:16;982:28;;;5:2:-1;;;;30:1;27;20:12;5:2;982:28:53;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;982:28:53;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;982:28:53;1171:40;;;;;;-1:-1:-1;;;;;1171:40:53;;;;;;;;;982:28;;-1:-1:-1;982:28:53;;1171;;;;;;:40;;;;;982:28;;1171:40;;;;;;;;:28;:40;;;5:2:-1;;;;30:1;27;20:12;5:2;1171:40:53;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1171:40:53;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1171:40:53;1163:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:16;-1:-1:-1;;;;;1274:23:53;;1298:10;1274:35;;;;;-1:-1:-1;;;1274:35:53;;;;;;;-1:-1:-1;;;;;1274:35:53;-1:-1:-1;;;;;1274:35:53;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:35:53;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1274:35:53;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1274:35:53;;736:580;-1:-1:-1;;;;;736:580:53:o;9034:241:12:-;9105:7;9097:16;;;;;;9132;9140:7;9132;:16::i;:::-;9131:17;9123:26;;;;;;9160:20;;;;:11;:20;;;;;;;;:25;;;9195:21;;;:17;:21;;;;;:33;;:31;:33::i;:::-;9260:7;9256:2;9253:1;9244:24;;;;;;;;;;9034:241;;:::o;8545:246::-;8630:4;8646:13;8662:16;8670:7;8662;:16::i;:::-;8646:32;;8707:5;8696:7;:16;:51;;;;8740:7;8716:20;8728:7;8716:11;:20::i;:::-;:31;8696:51;:87;;;;8751:32;8768:5;8775:7;8751:16;:32::i;:::-;8688:96;8545:246;-1:-1:-1;;;;8545:246:12:o;10457:353::-;10570:4;10550:16;10558:7;10550;:16::i;:::-;:24;10542:33;;;;;;10593:7;10585:16;;;;;;10612:23;10627:7;10612:14;:23::i;:::-;10646;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;10691:21;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;10735:20;;;;:11;:20;;;;;;:25;;;10776:27;10747:7;;10758:2;;10785:4;;10776:27;;;10457:353;;;:::o;11334:376::-;11455:4;11547:13;11596:2;-1:-1:-1;;;;;11563:53:12;;11617:18;11624:10;11617:6;:18::i;:::-;11637:4;11643:7;11652:5;11563:95;;;;;-1:-1:-1;;;11563:95:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11563:95:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11563:95:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11563:95:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11563:95:12;-1:-1:-1;;11676:26:12;11686:16;11676:26;;-1:-1:-1;;11334:376:12;;;;;;:::o;1530:148:11:-;1598:27;:11;1617:7;1598:27;:18;:27;:::i;:::-;1640:31;;1663:7;;1640:31;;;;;1530:148;:::o;778:156:10:-;853:4;877:12;869:21;;;;;;-1:-1:-1;907:11:10;:20;;;;;;;;;;;;;;;778:156::o;1062:112:61:-;1153:14;;1062:112::o;1384:140:11:-;1449:24;:11;1465:7;1449:24;:15;:24;:::i;:::-;1488:29;;1509:7;;1488:29;;;;;1384:140;:::o;1180:89:61:-;1243:19;;1261:1;1243:19;;;1180:89::o;11871:153:12:-;11934:24;;;;:15;:24;;;;;;:29;11930:88;;12006:1;11979:24;;;:15;:24;;;;;:28;11871:153::o;1275:108:61:-;1355:14;;:21;;1374:1;1355:21;:18;:21;:::i;:::-;1338:38;;1275:108::o;512:178:10:-;594:12;586:21;;;;;;625:18;629:4;635:7;625:3;:18::i;:::-;617:27;;;;;;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:10;;;512:178::o;263:175::-;342:12;334:21;;;;;;374:18;378:4;384:7;374:3;:18::i;:::-;373:19;365:28;;;;;;404:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;404:27:10;427:4;404:27;;;263:175::o;1156:145:66:-;1214:7;1246:1;1241;:6;;1233:15;;;;;;-1:-1:-1;1270:5:66;;;1156:145::o",
  "source": "pragma solidity ^0.5.2;\n\nimport \"./SnowflakeERC721.sol\";\nimport \"../../access/roles/SnowflakeMinterRole.sol\";\n\n/**\n * @title SnowflakeERC721Mintable\n * @dev Snowflake ERC721 minting logic\n */\ncontract SnowflakeERC721Mintable is SnowflakeERC721, SnowflakeMinterRole {\n\n/*    constructor (address _snowflakeAddress) public {\n        _constructSnowflakeERC721Mintable(_snowflakeAddress);\n    }\n*/\n    function _constructSnowflakeERC721Mintable(address _snowflakeAddress) internal {\n        _constructSnowflakeERC721(_snowflakeAddress);\n        _constructSnowflakeMinterRole(_snowflakeAddress);\n    }\n\n    /**\n     * @dev Function to mint tokens\n     * @param to The EIN that will receive the minted tokens.\n     * @param tokenId The token id to mint.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function mint(uint256 to, uint256 tokenId) public onlySnowflakeMinter returns (bool) {\n        _mint(to, tokenId);\n        return true;\n    }\n}\n",
  "sourcePath": "/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/ein/token/ERC721/SnowflakeERC721Mintable.sol",
  "ast": {
    "absolutePath": "/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/ein/token/ERC721/SnowflakeERC721Mintable.sol",
    "exportedSymbols": {
      "SnowflakeERC721Mintable": [
        6481
      ]
    },
    "id": 6482,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6441,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:15"
      },
      {
        "absolutePath": "/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/ein/token/ERC721/SnowflakeERC721.sol",
        "file": "./SnowflakeERC721.sol",
        "id": 6442,
        "nodeType": "ImportDirective",
        "scope": 6482,
        "sourceUnit": 6301,
        "src": "25:31:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/ein/access/roles/SnowflakeMinterRole.sol",
        "file": "../../access/roles/SnowflakeMinterRole.sol",
        "id": 6443,
        "nodeType": "ImportDirective",
        "scope": 6482,
        "sourceUnit": 5766,
        "src": "57:52:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6444,
              "name": "SnowflakeERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6300,
              "src": "228:15:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SnowflakeERC721_$6300",
                "typeString": "contract SnowflakeERC721"
              }
            },
            "id": 6445,
            "nodeType": "InheritanceSpecifier",
            "src": "228:15:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6446,
              "name": "SnowflakeMinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5765,
              "src": "245:19:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SnowflakeMinterRole_$5765",
                "typeString": "contract SnowflakeMinterRole"
              }
            },
            "id": 6447,
            "nodeType": "InheritanceSpecifier",
            "src": "245:19:15"
          }
        ],
        "contractDependencies": [
          5765,
          6300,
          6439,
          12011,
          12829,
          12976
        ],
        "contractKind": "contract",
        "documentation": "@title SnowflakeERC721Mintable\n@dev Snowflake ERC721 minting logic",
        "fullyImplemented": true,
        "id": 6481,
        "linearizedBaseContracts": [
          6481,
          5765,
          6300,
          12011,
          6439,
          12829,
          12976
        ],
        "name": "SnowflakeERC721Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6460,
              "nodeType": "Block",
              "src": "477:119:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6453,
                        "name": "_snowflakeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6449,
                        "src": "513:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6452,
                      "name": "_constructSnowflakeERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5823,
                      "src": "487:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 6454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "487:44:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6455,
                  "nodeType": "ExpressionStatement",
                  "src": "487:44:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6457,
                        "name": "_snowflakeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6449,
                        "src": "571:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6456,
                      "name": "_constructSnowflakeMinterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5683,
                      "src": "541:29:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 6458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "541:48:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6459,
                  "nodeType": "ExpressionStatement",
                  "src": "541:48:15"
                }
              ]
            },
            "documentation": null,
            "id": 6461,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_constructSnowflakeERC721Mintable",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6449,
                  "name": "_snowflakeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 6461,
                  "src": "441:25:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "440:27:15"
            },
            "returnParameters": {
              "id": 6451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "477:0:15"
            },
            "scope": 6481,
            "src": "398:198:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6479,
              "nodeType": "Block",
              "src": "918:56:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6473,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6463,
                        "src": "934:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6474,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6465,
                        "src": "938:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6472,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6143,
                      "src": "928:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 6475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "928:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6476,
                  "nodeType": "ExpressionStatement",
                  "src": "928:18:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 6477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "963:4:15",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6471,
                  "id": 6478,
                  "nodeType": "Return",
                  "src": "956:11:15"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The EIN that will receive the minted tokens.\n@param tokenId The token id to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 6480,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 6468,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6467,
                  "name": "onlySnowflakeMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5696,
                  "src": "883:19:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "883:19:15"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6463,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 6480,
                  "src": "847:10:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6465,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 6480,
                  "src": "859:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "846:29:15"
            },
            "returnParameters": {
              "id": 6471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6470,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6480,
                  "src": "912:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6469,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "912:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "911:6:15"
            },
            "scope": 6481,
            "src": "833:141:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 6482,
        "src": "192:784:15"
      }
    ],
    "src": "0:977:15"
  },
  "legacyAST": {
    "absolutePath": "/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/ein/token/ERC721/SnowflakeERC721Mintable.sol",
    "exportedSymbols": {
      "SnowflakeERC721Mintable": [
        6481
      ]
    },
    "id": 6482,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6441,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:15"
      },
      {
        "absolutePath": "/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/ein/token/ERC721/SnowflakeERC721.sol",
        "file": "./SnowflakeERC721.sol",
        "id": 6442,
        "nodeType": "ImportDirective",
        "scope": 6482,
        "sourceUnit": 6301,
        "src": "25:31:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/luiserebii/github/HydroSnowflake-Marketplace-Coupons/contracts/ein/access/roles/SnowflakeMinterRole.sol",
        "file": "../../access/roles/SnowflakeMinterRole.sol",
        "id": 6443,
        "nodeType": "ImportDirective",
        "scope": 6482,
        "sourceUnit": 5766,
        "src": "57:52:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6444,
              "name": "SnowflakeERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6300,
              "src": "228:15:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SnowflakeERC721_$6300",
                "typeString": "contract SnowflakeERC721"
              }
            },
            "id": 6445,
            "nodeType": "InheritanceSpecifier",
            "src": "228:15:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6446,
              "name": "SnowflakeMinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5765,
              "src": "245:19:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SnowflakeMinterRole_$5765",
                "typeString": "contract SnowflakeMinterRole"
              }
            },
            "id": 6447,
            "nodeType": "InheritanceSpecifier",
            "src": "245:19:15"
          }
        ],
        "contractDependencies": [
          5765,
          6300,
          6439,
          12011,
          12829,
          12976
        ],
        "contractKind": "contract",
        "documentation": "@title SnowflakeERC721Mintable\n@dev Snowflake ERC721 minting logic",
        "fullyImplemented": true,
        "id": 6481,
        "linearizedBaseContracts": [
          6481,
          5765,
          6300,
          12011,
          6439,
          12829,
          12976
        ],
        "name": "SnowflakeERC721Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6460,
              "nodeType": "Block",
              "src": "477:119:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6453,
                        "name": "_snowflakeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6449,
                        "src": "513:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6452,
                      "name": "_constructSnowflakeERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5823,
                      "src": "487:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 6454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "487:44:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6455,
                  "nodeType": "ExpressionStatement",
                  "src": "487:44:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6457,
                        "name": "_snowflakeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6449,
                        "src": "571:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6456,
                      "name": "_constructSnowflakeMinterRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5683,
                      "src": "541:29:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 6458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "541:48:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6459,
                  "nodeType": "ExpressionStatement",
                  "src": "541:48:15"
                }
              ]
            },
            "documentation": null,
            "id": 6461,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_constructSnowflakeERC721Mintable",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6449,
                  "name": "_snowflakeAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 6461,
                  "src": "441:25:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "441:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "440:27:15"
            },
            "returnParameters": {
              "id": 6451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "477:0:15"
            },
            "scope": 6481,
            "src": "398:198:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6479,
              "nodeType": "Block",
              "src": "918:56:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6473,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6463,
                        "src": "934:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6474,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6465,
                        "src": "938:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6472,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6143,
                      "src": "928:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 6475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "928:18:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6476,
                  "nodeType": "ExpressionStatement",
                  "src": "928:18:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 6477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "963:4:15",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6471,
                  "id": 6478,
                  "nodeType": "Return",
                  "src": "956:11:15"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The EIN that will receive the minted tokens.\n@param tokenId The token id to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 6480,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 6468,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6467,
                  "name": "onlySnowflakeMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5696,
                  "src": "883:19:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "883:19:15"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6463,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 6480,
                  "src": "847:10:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6465,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 6480,
                  "src": "859:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "846:29:15"
            },
            "returnParameters": {
              "id": 6471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6470,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6480,
                  "src": "912:4:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6469,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "912:4:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "911:6:15"
            },
            "scope": 6481,
            "src": "833:141:15",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 6482,
        "src": "192:784:15"
      }
    ],
    "src": "0:977:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.6+commit.b259423e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-04-12T01:36:38.055Z",
  "devdoc": {
    "details": "Snowflake ERC721 minting logic",
    "methods": {
      "approve(uint256,uint256)": {
        "details": "Approves another EIN to transfer the given token ID The zero EIN indicates there is no approved EIN. There can only be one approved EIN per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "uint256 to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(uint256)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "uint256 to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved EIN for a token ID, or zero if no EIN set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "EIN currently approved for the given token ID"
      },
      "isApprovedForAll(uint256,uint256)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator EIN which you want to query the approval of",
          "owner": "owner EIN which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mint(uint256,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The EIN that will receive the minted tokens.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "uint256 currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(uint256,uint256,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another EIN If the target EIN is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "uint256 current owner of the token",
          "to": "uint256 to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(uint256,uint256,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another EIN If the target EIN is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "uint256 to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(uint256,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator EIN to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "transferFrom(uint256,uint256,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "SnowflakeERC721Mintable"
  },
  "userdoc": {
    "methods": {}
  }
}